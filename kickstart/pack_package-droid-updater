pushd $IMG_OUT_DIR # ./sfe-$DEVICE-$RELEASE_ID

DEVICE=@DEVICE@

# Source release info e.g. VERSION
source ./os-release

# Locate rootfs tar.bz2 archive
for filename in *.tar.bz2; do
	GEN_IMG_BASE=$(basename $filename .tar.bz2) # sfe-$DEVICE-3.0.3.10
done
if [ ! -e "$GEN_IMG_BASE.tar.bz2" ]; then
	echo "[hybris-installer] No rootfs archive found, exiting..."
	exit 1
fi

# Roughly estimate the final rootfs size when installed
IMAGE_SIZE=`echo "scale=2; 2.25 * $(du -h $GEN_IMG_BASE.tar.bz2 | cut -d'M' -f1)" | bc`
#IMAGE_SIZE=`echo "scale=2; $(bzcat $GEN_IMG_BASE.tar.bz2 | wc -c) / 1024 / 1024" | bc` # <- way too slow to be practical
echo "[hybris-installer] Estimated rootfs size when installed: ${IMAGE_SIZE}M"

# Output filenames
DST_IMG_BASE=$ID-$DEVICE-$SAILFISH_FLAVOUR-$VERSION_ID@EXTRA_NAME@ # sailfishos-$DEVICE-release-3.0.3.10
DST_IMG=$DST_IMG_BASE.tar.bz2

# Copy updater scripts, boot image & custom hybris-installer into updater .zip tree
mkdir -p updater/META-INF/com/google/android
mv update-binary updater/META-INF/com/google/android/
mv hybris-boot.img updater/
mv $GEN_IMG_BASE.tar.bz2 updater/$DST_IMG
cp -r ../hybris/hybris-installer/hybris-installer/* updater/

# Update scripts with image details
sed -e "s/%IMAGE_FILE%/$DST_IMG/g" -i updater/META-INF/com/google/android/updater-script
sed -e "s/%VERSION%/$VERSION/g" -e "s/%IMAGE_SIZE%/${IMAGE_SIZE}M/g" -i updater/custom-install.sh

# Pack updater .zip
pushd updater # sfe-$DEVICE-$RELEASE_ID/updater
echo "[hybris-installer] Creating package '$DST_IMG_BASE.zip'..."
zip -r ../$DST_IMG_BASE.zip .
mv $DST_IMG ../$GEN_IMG_BASE.tar.bz2
popd # sfe-$DEVICE-$RELEASE_ID

# Clean up working directories
rm -rf updater/

popd # hadk source tree
